// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/iurikman/cashFlowManager/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// TransactionsProducer is an autogenerated mock type for the transactionsProducer type
type TransactionsProducer struct {
	mock.Mock
}

// ProduceTransaction provides a mock function with given fields: ctx, transactions
func (_m *TransactionsProducer) ProduceTransaction(ctx context.Context, transactions models.Transaction) error {
	ret := _m.Called(ctx, transactions)

	if len(ret) == 0 {
		panic("no return value specified for ProduceTransaction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Transaction) error); ok {
		r0 = rf(ctx, transactions)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTransactionsProducer creates a new instance of TransactionsProducer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTransactionsProducer(t interface {
	mock.TestingT
	Cleanup(func())
}) *TransactionsProducer {
	mock := &TransactionsProducer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
